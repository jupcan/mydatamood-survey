---
openapi: 3.0.1
info:
  title: mydatamood-survey
  version: v1
paths:
  "/categories":
    get:
      summary: query category data
      tags:
      - category
      parameters:
      - name: q
        in: query
        description: type of query to be run
        schema:
          type: string
      - name: limit
        in: query
        description: limit in the number of results returned
        schema:
          type: integer
      - name: reverse
        in: query
        description: flag to indicate the result ordering
        schema:
          type: boolean
      responses:
        '200':
          description: list of categories
          content:
            application/json:
              example:
              - category: landline_internet
                score: 8
              - category: race_cars
                score: 7
              - category: stock_investment
                score: 6.5
              schema:
                type: array
                name: categories
                items:
                  properties:
                    "$ref": "#/definitions/category"
        '400':
          description: unknown query type
  "/interests":
    post:
      summary: load interest show by a user into a particular product
      tags:
      - interest
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/definitions/interest"
        '422':
          description: product must exist
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/interest"
  "/products":
    put:
      summary: load list of available products into the system
      tags:
      - product
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                type: array
                name: products
                items:
                  "$ref": "#/definitions/product"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/definitions/product"
    get:
      summary: query product data
      tags:
      - product
      parameters:
      - name: q
        in: query
        description: type of query to be run
        schema:
          type: string
      - name: limit
        in: query
        description: limit in the number of results returned
        schema:
          type: integer
      - name: reverse
        in: query
        description: flag to indicate the result ordering
        schema:
          type: boolean
      responses:
        '200':
          description: list of products
          content:
            application/json:
              schema:
                type: array
                name: products
                items:
                  "$ref": "#/definitions/product"
        '400':
          description: unknown query type
servers:
- url: http://localhost:3000
  description: test server
- url: heroku
  description: production server
definitions:
  category:
    type: object
    properties:
      category:
        type: string
      score:
        type: number
    required:
    - category
  product:
    type: object
    properties:
      id:
        type: string
        example: 1234abcd
      name:
        type: string
        example: Car Insurance for any damage
      category:
        type: string
        example: car_insurances
      score:
        type: number
        example: 3.5
    required:
    - name
    - category
  user:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      email:
        type: string
    required:
    - id
  interest:
    type: object
    properties:
      user_id:
        type: string
        example: asdfasdf123
      product_id:
        type: string
        example: 1234abcd
      score:
        type: number
        example: 7
    required:
    - user_id
    - product_id
    - score
